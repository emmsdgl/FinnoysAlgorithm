I want you to help me create a full PHP web application for Fin-noys Oy (a cleaning agency) using PHP + MySQL with PDO.
The system should be built step by step across 4 phases, but please generate the complete codebase from the start.

⚠️ Important: Stay in PHP + MySQL. Do not switch to Node.js/Express or another stack.

Phase 1 – Admin Module + Dashboard

Database Schema (MySQL)
Create these tables:

employees

id (INT, PK, AUTO_INCREMENT)

name (VARCHAR)

skills (JSON)

hourly_rate (DECIMAL(5,2), default: 13.00)

pay_period (VARCHAR, default: "monthly")

max_hours_per_3weeks (INT, default: 90)

trial_period_months (INT, default: 3)

collective_agreement (TEXT, default: "Property Service Sector Collective Agreement")

insurance (TEXT, default: "Ilmarinen, TyEL, Työtapaturma, Työllisyysrahasto, Unemployment Benefits")

start_date (DATE)

end_date (DATE NULL)

principal_duties (TEXT, default: "Cleaning accommodations, Maintenance, Restaurant Staff")

tasks

id (INT, PK)

title (VARCHAR)

required_skills (JSON)

estimated_duration (INT, hours)

priority_level (ENUM: low, medium, high, urgent)

scheduled_date (DATE)

time_slot (VARCHAR)

location (VARCHAR)

team_id (FK to teams, NULL)

status (ENUM: pending, in progress, on hold, completed, default: pending)

teams

id (INT, PK)

team_name (VARCHAR)

team_members

id (INT, PK)

team_id (FK)

employee_id (FK)

employee_availability

id (INT, PK)

employee_id (FK)

date (DATE)

time_slot (VARCHAR)

is_available (BOOLEAN)

Admin Features

add_employee.php: add employees (Name, Skills, Start/End Date). Default other contract fields.

add_task.php: add tasks manually.

index.php: Dashboard

Show Employees (all contract fields).

Show Tasks (priority, assigned team, status).

Buttons: Add Employee, Add Task, Run Optimization.

Phase 2 – Client Booking + Cinema-Style Admin Tasks

Client Module (client_booking.php)

Client books a service: Name, Service Type (Daily, Deep Cleaning, Public/Common Area, Snow-Out), Date.

Creates a Task:

Title = "[Service] for [Client]"

Required skills = ["general"]

Duration = 2

Priority = medium

Time Slot = "09:00–11:00"

Location = "External Client"

Admin Recurring Clients (admin_add_task.php)

Select Client (e.g., Aikamatkat, Kakslautanen).

Select Date + Service Type.

Show a cinema-style grid of Rooms, Cabins, Igloos.

Selecting multiple creates multiple tasks at once.

Phase 3 – Team Management + Task Updates

Team Management

create_team.php: form to create team + select 3 employees.

list_teams.php: show all teams + members.

Task Updates

Admin can assign tasks to Teams via dropdown.

team_tasks.php: Team members can view assigned tasks + update status (pending, in progress, on hold, completed).

Phase 4 – Algorithm Integration (Rule-Based + GA)

Rule-Based Filtering

Match skills.

Check availability.

Respect contract start/end.

Respect max_hours_per_3weeks.

Genetic Algorithm

Optimize assignment of tasks to Teams of 3.

Prioritize urgent tasks.

Balance workload across employees.

Integration

HybridScheduler.php: contains Rule-Based + GA logic.

Dashboard: "Run Optimization" assigns tasks automatically to Teams + updates DB.

Dataset for Testing

Generate a seed_data.sql (or seed.php) with:

Employees from uploaded contracts (V. Digol, Mikaela Y. Leonardo, M. Leonardo) + some fictional ones.

3 Teams with 3 members each.

At least 10 tasks (mix of Client bookings + Recurring tasks).

Overlapping tasks for conflict resolution.

Availability so some tasks are feasible and others not.

Requirements

Stay in PHP + MySQL with PDO.

Use modular files (db.php, index.php, HybridScheduler.php, etc.).

Schema + seed data must run directly in MySQL (also works in XAMPP).

Do not skip any phase.

Provide SQL seed file so I can test the algorithm immediately.